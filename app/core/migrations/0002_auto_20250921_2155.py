# Generated by Django 3.2.25 on 2025-09-21 21:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Admin'), ('MANAGER', 'Manager'), ('EMPLOYEE', 'Employee')], default='MANAGER', max_length=20),
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='business_logos/')),
                ('website', models.URLField(blank=True)),
                ('business_description', models.TextField(max_length=1000)),
                ('street_address', models.CharField(max_length=255)),
                ('suite_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(default='CA', max_length=2)),
                ('province_state', models.CharField(max_length=2)),
                ('postal_code', models.CharField(max_length=10)),
                ('business_number', models.CharField(max_length=20)),
                ('tax_rate', models.IntegerField(default=0)),
                ('timezone', models.CharField(default='America/Edmonton', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_businesses', to=settings.AUTH_USER_MODEL)),
                ('services_offered', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
